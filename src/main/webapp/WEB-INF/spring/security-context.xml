<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
		
		<bean id="customAccessDenied" class="com.cjg.security.CustomAccessDeniedHandler"></bean>
		<bean id="customLoginSuccess" class="com.cjg.security.CustomLoginSuccessHandler"></bean>
		
		<bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
		
		<bean id="customUserDetailsService" class="com.cjg.security.CustomUserDetailsService"></bean>
		
		
		<security:http>
		
			<security:intercept-url pattern="/sample/all" access="permitAll"/>
			<security:intercept-url pattern="/sample/member" access="hasRole('ROLE_MEMBER')"/>
			<security:intercept-url pattern="/sample/admin" access="hasRole('ROLE_ADMIN')"/>
					
			<security:access-denied-handler ref="customAccessDenied"/>
			
			
			<!-- 로그인에 성공했을 때 처리. -->
			<security:form-login login-page="/customLogin" authentication-success-handler-ref="customLoginSuccess" />
			
			<!-- 로그아웃 처리
			<security:logout logout-url="/customLogout" invalidate-session="true"/>
			 -->
			 
			<!--  자동 로그인 처리 -->
			<security:remember-me data-source-ref="dataSource" token-validity-seconds="604800"/>
			
			<!-- 로그아웃시 쿠키삭제 -->
			<security:logout logout-url="/customLogout" invalidate-session="true" delete-cookies="remember-me, JSESSION_ID"/>
			
			
		</security:http>
		
		
		<!-- 스프링시큐리티 기본 아이디 설정,인코더 설정, 특정 회원테이블을 사용하기 위해 쿼리를 사용하였음 -->
		<security:authentication-manager>
			<security:authentication-provider user-service-ref="customUserDetailsService">
				<!-- 
				<security:jdbc-user-service 
				data-source-ref="dataSource" 
				users-by-username-query="select userid, userpw, enabled from tbl_member where userid=?"
				authorities-by-username-query="select userid, auth from tbl_member_auth where userid=?"/> -->
				
				<security:password-encoder ref="bcryptPasswordEncoder"/>
				
			</security:authentication-provider>
		</security:authentication-manager>
</beans>